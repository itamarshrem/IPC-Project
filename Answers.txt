Theoretical Questions:
1. Namespaces defines which operating system components, processes inside the container can
see. For example the Process IDs, owner names, user IDs, systems, The files (which files it sees,
does it see files that were not created from the container), communication and more.
2. The two differences:
    a. In containers, virtualization is only for the operating system, and not for the hardware.
    In VMs, virtualization is of the entire system- both hardware and operating system.
    b. supporting VMs require more resources than containers.
3. No- containers are designed to provide isolated environments for running applications, and they
use separate namespaces for processes, networking, and file systems to achieve this isolation.
Shared memory communication between containers is not a built-in feature. To enable shared
memory communication, we can use mechanisms that are available on the host OS, such as
using shared memory segments or named pipes. Another option is to use shared storage
volumes- the containers can then read and write data to this shared volume to communicate
indirectly.
4. Yes- containers share the same host OS, so they can connect to each other or external services
using TCP/IP or UDP sockets, enabling inter-container communication.